# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

MAGENTA="\033[1;31m"
ORANGE="\033[1;33m"
GREEN="\033[1;32m"
PURPLE="\033[1;35m"
WHITE="\033[1;37m"
BOLD=""
RESET="\033[m"

export MAGENTA
export ORANGE
export GREEN
export PURPLE
export WHITE
export BOLD
export RESET

function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1/"
}

function git_color {
	local git_status=$(git status 2> /dev/null)

	if [[ ! $git_status =~ "working directory clean" ]]; then
		GIT_COLOR=$MAGENTA
  else if [[ $git_status =~ "Your branch is ahead of" ]]; then
		GIT_COLOR=$ORANGE
	else if [[ $git_status =~ "nothing to commit" ]]; then
		GIT_COLOR=$GREEN
	else
		GIT_COLOR=$PURPLE
	fi fi fi

	echo -e "$GIT_COLOR"
}

function set_bash_prompt() {
	PS1="\[${BOLD}${MAGENTA}\]\u \[$WHITE\]in \[$ORANGE\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$(git_color)\]$(parse_git_branch)\[$WHITE\]\n\$ \[$RESET\]"
}

PROMPT_COMMAND=set_bash_prompt

PS2="\[$ORANGE\]→ \[$RESET\]"
